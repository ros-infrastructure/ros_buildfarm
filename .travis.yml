env:
  global:
    - CONFIG_URL=https://raw.githubusercontent.com/ros-infrastructure/ros_buildfarm_config/production/index.yaml
    - CONFIG2_URL=https://raw.githubusercontent.com/ros2/ros_buildfarm_config/ros2/index.yaml
    - ROS_DISTRO_NAME=melodic
    - ROS2_DISTRO_NAME=crystal
    - OS_NAME=ubuntu
    - OS_CODE_NAME=bionic
    - OS_CODE_NAME2=bionic
    - ARCH=amd64
    - ROS_BUILDFARM_PULL_REQUEST_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
matrix:
  include:
    - language: python
      python: "3.6"
      sudo: false
      install:
        - pip install catkin-pkg EmPy jenkinsapi PyYAML rosdistro vcstool
        - pip install flake8 flake8-import-order pep8 pyflakes pytest
      script:
        - py.test -s test
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel REPOSITORY_NAME=rcutils ROSDISTRO_INDEX_URL=https://raw.githubusercontent.com/ros2/rosdistro/ros2/index-v4.yaml
      before_script:
        # install colcon for test results
        - pip install colcon-core colcon-test-result
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG2_URL $ROS2_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME2 $ARCH > job.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=prerelease UNDERLAY_REPOSITORY_NAMES="ament_cmake_ros" OVERLAY_PACKAGE_NAMES=rcutils ROSDISTRO_INDEX_URL=https://raw.githubusercontent.com/ros2/rosdistro/ros2/index-v4.yaml
      before_script:
        # install colcon for test results
        - pip install colcon-core colcon-test-result
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_prerelease_script.py $CONFIG2_URL $ROS2_DISTRO_NAME default $OS_NAME $OS_CODE_NAME2 $ARCH $UNDERLAY_REPOSITORY_NAMES --pkg $OVERLAY_PACKAGE_NAMES --output-dir .
        - . prerelease.sh -y
        - (exit $test_result_RC_underlay) && (exit $test_result_RC_overlay)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=ci UNDERLAY_PACKAGES="ament_flake8 ament_pep257" OVERLAY_PACKAGES="ament_cmake_ros"
      before_script:
        # install colcon for test results
        - pip install colcon-core colcon-test-result
        - python setup.py install
        - mkdir job job/underlay && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_ci_script.py $CONFIG2_URL $ROS2_DISTRO_NAME nightly $OS_NAME $OS_CODE_NAME2 $ARCH --package-selection-args --packages-up-to $UNDERLAY_PACKAGES > job.sh
        - (. job.sh -y; exit $test_result_RC)
        - tar -xjf ros2-$ROS2_DISTRO_NAME-linux-$OS_CODE_NAME2-$ARCH-ci.tar.bz2 -C underlay
        - generate_ci_script.py $CONFIG2_URL $ROS2_DISTRO_NAME nightly $OS_NAME $OS_CODE_NAME2 $ARCH --underlay-source-path underlay/ros2-linux --package-selection-args --packages-skip-up-to $UNDERLAY_PACKAGES --packages-up-to $OVERLAY_PACKAGES > job.sh
        - (. job.sh -y; exit $test_result_RC)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel BUILD_TOOL=colcon REPOSITORY_NAME=roscpp_core ROSDISTRO_INDEX_URL=https://raw.githubusercontent.com/ros2/rosdistro/ros2/index-v4.yaml
      before_script:
        # install colcon for test results
        - pip install colcon-core colcon-test-result
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH --build-tool $BUILD_TOOL > job.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel REPOSITORY_NAME=roscpp_core
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - sudo apt-get install python3-vcstool -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - . /opt/ros/indigo/setup.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=doc REPOSITORY_NAME=roscpp_core
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_doc_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
        - ls -alR generated_documentation/api_rosdoc
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=release PACKAGE_NAME=rostime
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - mkdir source && cd source && ln -s ../.. ros_buildfarm && cd ..
        - mkdir binary && cd binary && ln -s ../.. ros_buildfarm && cd ..
      script:
        - generate_release_script.py $CONFIG_URL $ROS_DISTRO_NAME default $PACKAGE_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=prerelease UNDERLAY_REPOSITORY_NAMES="roscpp_core" OVERLAY_PACKAGE_NAMES=roscpp
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH $UNDERLAY_REPOSITORY_NAMES --pkg $OVERLAY_PACKAGE_NAMES --output-dir .
        - . /opt/ros/indigo/setup.sh
        - . prerelease.sh -y
        - (exit $test_result_RC_underlay) && (exit $test_result_RC_overlay)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=external_prerelease
      before_script:
        - sudo apt-get update
        - sudo apt-get install -y python3-pip
        - sudo pip3 install vcstool
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - git clone -b dummy_package https://github.com/ros-infrastructure/ros_buildfarm ws/src/ros_buildfarm
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH --output-dir .
        - ./prerelease.sh -y
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=status_pages
      before_script:
        - python setup.py install
        - mkdir status_pages && cd status_pages
      script:
        - build_blocked_releases_page.py $CONFIG_URL $ROS_DISTRO_NAME
        - build_release_compare_page.py $CONFIG_URL kinetic melodic
        - build_release_status_page.py $CONFIG_URL $ROS_DISTRO_NAME default
        - build_repos_status_page.py $ROS_DISTRO_NAME http://packages.ros.org/ros-shadow-fixed/ubuntu http://packages.ros.org/ros/ubuntu --os-code-name-and-arch-tuples bionic:source bionic:amd64 bionic:arm64 bionic:armhf bionic:i386 --cache-dir ./debian_repo_cache --output-name melodic_bionic
        - ls -al
    - language: python
      python: "3.5"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel REPOSITORY_NAME=roscpp_core
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - sudo apt-get install python3-vcstool -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - . /opt/ros/indigo/setup.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "3.5"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=doc REPOSITORY_NAME=roscpp_core
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_doc_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
        - ls -alR generated_documentation/api_rosdoc
    - language: python
      python: "3.5"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=release PACKAGE_NAME=rostime
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - mkdir source && cd source && ln -s ../.. ros_buildfarm && cd ..
        - mkdir binary && cd binary && ln -s ../.. ros_buildfarm && cd ..
      script:
        - generate_release_script.py $CONFIG_URL $ROS_DISTRO_NAME default $PACKAGE_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
    - language: python
      python: "3.5"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=prerelease UNDERLAY_REPOSITORY_NAMES="roscpp_core" OVERLAY_PACKAGE_NAMES=roscpp
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH $UNDERLAY_REPOSITORY_NAMES --pkg $OVERLAY_PACKAGE_NAMES --output-dir .
        - . /opt/ros/indigo/setup.sh
        - . prerelease.sh -y
        - (exit $test_result_RC_underlay) && (exit $test_result_RC_overlay)
    - language: python
      python: "3.5"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=external_prerelease
      before_script:
        - sudo apt-get update
        - sudo apt-get install -y python3-pip
        - sudo pip3 install vcstool
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - git clone -b dummy_package https://github.com/ros-infrastructure/ros_buildfarm ws/src/ros_buildfarm
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH --output-dir .
        - ./prerelease.sh -y
    - language: python
      python: "3.5"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=status_pages
      before_script:
        - python setup.py install
        - mkdir status_pages && cd status_pages
      script:
        - build_blocked_releases_page.py $CONFIG_URL $ROS_DISTRO_NAME
        - build_release_compare_page.py $CONFIG_URL kinetic melodic
        - build_release_status_page.py $CONFIG_URL $ROS_DISTRO_NAME default
        - build_repos_status_page.py $ROS_DISTRO_NAME http://packages.ros.org/ros-shadow-fixed/ubuntu http://packages.ros.org/ros/ubuntu --os-code-name-and-arch-tuples bionic:source bionic:amd64 bionic:arm64 bionic:armhf bionic:i386 --cache-dir ./debian_repo_cache --output-name melodic_bionic
        - ls -al
    - language: python
      python: "3.4"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel REPOSITORY_NAME=roscpp_core
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - sudo apt-get install python3-vcstool -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - . /opt/ros/indigo/setup.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "3.4"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=doc REPOSITORY_NAME=roscpp_core
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_doc_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
        - ls -alR generated_documentation/api_rosdoc
    - language: python
      python: "3.4"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=release PACKAGE_NAME=rostime
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - mkdir source && cd source && ln -s ../.. ros_buildfarm && cd ..
        - mkdir binary && cd binary && ln -s ../.. ros_buildfarm && cd ..
      script:
        - generate_release_script.py $CONFIG_URL $ROS_DISTRO_NAME default $PACKAGE_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
    - language: python
      python: "3.4"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=prerelease UNDERLAY_REPOSITORY_NAMES="roscpp_core" OVERLAY_PACKAGE_NAMES=roscpp
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH $UNDERLAY_REPOSITORY_NAMES --pkg $OVERLAY_PACKAGE_NAMES --output-dir .
        - . /opt/ros/indigo/setup.sh
        - . prerelease.sh -y
        - (exit $test_result_RC_underlay) && (exit $test_result_RC_overlay)
    - language: python
      python: "3.4"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=external_prerelease
      before_script:
        - sudo apt-get update
        - sudo apt-get install -y python3-pip
        - sudo pip3 install vcstool
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - git clone -b dummy_package https://github.com/ros-infrastructure/ros_buildfarm ws/src/ros_buildfarm
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH --output-dir .
        - ./prerelease.sh -y
    - language: python
      python: "3.4"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=status_pages
      before_script:
        - python setup.py install
        - mkdir status_pages && cd status_pages
      script:
        - build_blocked_releases_page.py $CONFIG_URL $ROS_DISTRO_NAME
        - build_release_compare_page.py $CONFIG_URL kinetic melodic
        - build_release_status_page.py $CONFIG_URL $ROS_DISTRO_NAME default
        - build_repos_status_page.py $ROS_DISTRO_NAME http://packages.ros.org/ros-shadow-fixed/ubuntu http://packages.ros.org/ros/ubuntu --os-code-name-and-arch-tuples bionic:source bionic:amd64 bionic:arm64 bionic:armhf bionic:i386 --cache-dir ./debian_repo_cache --output-name melodic_bionic
        - ls -al
    - language: python
      python: "2.7"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel REPOSITORY_NAME=roscpp_core
      before_script:
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - sudo apt-get install python-vcstool -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - . /opt/ros/indigo/setup.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "2.7"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=doc REPOSITORY_NAME=roscpp_core
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_doc_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
        - ls -alR generated_documentation/api_rosdoc
    - language: python
      python: "2.7"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=release PACKAGE_NAME=rostime
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - mkdir source && cd source && ln -s ../.. ros_buildfarm && cd ..
        - mkdir binary && cd binary && ln -s ../.. ros_buildfarm && cd ..
      script:
        - generate_release_script.py $CONFIG_URL $ROS_DISTRO_NAME default $PACKAGE_NAME $OS_NAME $OS_CODE_NAME $ARCH > job.sh
        - sh job.sh -y
    - language: python
      python: "2.7"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=prerelease UNDERLAY_REPOSITORY_NAMES="roscpp_core" OVERLAY_PACKAGE_NAMES=roscpp
      before_script:
        - sudo apt-get update
        - sudo apt-get install -y python3-pip
        - sudo pip3 install EmPy
        # install catkin for test results
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
        - sudo apt-get update -qq
        - sudo apt-get install dpkg -y  # necessary for catkin-pkg to be installable
        - sudo apt-get install ros-indigo-catkin -y
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH $UNDERLAY_REPOSITORY_NAMES --pkg $OVERLAY_PACKAGE_NAMES --output-dir .
        - . /opt/ros/indigo/setup.sh
        - . prerelease.sh -y
        - (exit $test_result_RC_underlay) && (exit $test_result_RC_overlay)
    - language: python
      python: "2.7"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=external_prerelease
      before_script:
        - sudo apt-get update
        - sudo apt-get install -y python3-pip
        - sudo pip3 install EmPy vcstool
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - git clone -b dummy_package https://github.com/ros-infrastructure/ros_buildfarm ws/src/ros_buildfarm
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH --output-dir .
        - ./prerelease.sh -y
    - language: python
      python: "2.7"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=status_pages
      before_script:
        - python setup.py install
        - mkdir status_pages && cd status_pages
      script:
        - build_blocked_releases_page.py $CONFIG_URL $ROS_DISTRO_NAME
        - build_release_compare_page.py $CONFIG_URL kinetic melodic
        - build_release_status_page.py $CONFIG_URL $ROS_DISTRO_NAME default
        - build_repos_status_page.py $ROS_DISTRO_NAME http://packages.ros.org/ros-shadow-fixed/ubuntu http://packages.ros.org/ros/ubuntu --os-code-name-and-arch-tuples bionic:source bionic:amd64 bionic:arm64 bionic:armhf bionic:i386 --cache-dir ./debian_repo_cache --output-name melodic_bionic
        - ls -al
notifications:
  email: false
