language: python
python:
  - "3.4"
sudo: false
env:
  global:
    - CONFIG_URL=https://raw.githubusercontent.com/ros2/ros_buildfarm_config/build_tool_and_ros_version/index.yaml
    - ROS_DISTRO_NAME=bouncy
    - OS_NAME=ubuntu
    - OS_CODE_NAME=bionic
    - ARCH=amd64
    - ROS_BUILDFARM_PULL_REQUEST_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH
matrix:
  include:
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=devel REPOSITORY_NAME=rcl
      before_script:
        # install colcon for test results
        - pip install colcon-core colcon-test-result
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_devel_script.py $CONFIG_URL $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH --build-tool colcon > job.sh
        - . job.sh -y
        - (exit $test_result_RC)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=prerelease UNDERLAY_REPOSITORY_NAMES="rcl" OVERLAY_PACKAGE_NAMES=rclcpp
      before_script:
        # install colcon for test results
        - pip install colcon-core colcon-test-result
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH $UNDERLAY_REPOSITORY_NAMES --pkg $OVERLAY_PACKAGE_NAMES --output-dir . --build-tool colcon
        - . prerelease.sh -y
        - (exit $test_result_RC_underlay) && (exit $test_result_RC_overlay)
    - language: python
      python: "3.6"
      sudo: required
      services:
        - docker
      env: JOB_TYPE=external_prerelease
      before_script:
        - python setup.py install
        - mkdir job && cd job
        - ln -s .. ros_buildfarm
      script:
        - git clone -b dummy_package https://github.com/ros-infrastructure/ros_buildfarm ws/src/ros_buildfarm
        - generate_prerelease_script.py $CONFIG_URL $ROS_DISTRO_NAME default $OS_NAME $OS_CODE_NAME $ARCH --output-dir . --build-tool colcon
        - ./prerelease.sh -y
install:
  - pip install catkin-pkg EmPy PyYAML rosdistro
  - pip install coverage flake8 flake8-docstrings flake8-import-order nose pep8 pyflakes
script:
  - python setup.py nosetests -s --tests test
notifications:
  email: false
